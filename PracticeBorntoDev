/*SELECT 
	FirstName AS customer_firstname, 
	LastName AS customer_lastname
FROM customers;*/

/*SELECT * FROM customers
WHERE Country = 'Canada' OR Country = 'Norway'
ORDER BY CustomerId DESC
LIMIT 2;*/

SELECT CustomerId,
	FirstName,
	LastName,
	Address
FROM customers
WHERE CustomerId > 10;
//////////// ถ้าอยากนับ Count ////////////
SELECT count (FirstName)
FROM customers
WHERE City = 'Berlin';
////////////////////////////////////////



/*INSERT INTO customers
VALUES(60, 'Krittapas', 'Auwanitkun', 'Alstom', 'Tempo Quad', 'Bangkok', 'PP', //////////////////////////////////////// การ Insert ////////////////////////////////////
'Thailand', 10220, 0980150397, NULL, 'krittapas.auwanitkun@gmail.com', 6);*/

/*INSERT INTO customers(FirstName,LastName,Email)
VALUES('Phantila', 'Raweewat', 'Phanthilaraweewat@gmail.com');*/

/*UPDATE customers
SET FirstName = 'Phantila',  //////////////////////////////////////// การ update ////////////////////////////////////
	LastName = 'Auwanitkun'
WHERE CustomerId = 61;*/

////////////////////////////////////////// การนับ โดย Group By สิ่งที่อยากรู้ //////////////////////////////////////////////
SELECT count(CustomerId), Country
FROM customers
GROUP by Country;                >>>>>>>>>>> สามารถเพิ่ม ORDER by colum_name ที่อยากนับได้ให้เรียงจำนวน
//////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////// การใช้ Having กำหนดเงื่อนไขแสดงผล ////////////////////////////////////////
SELECT count(CustomerId) as Amount, Country
FROM customers
GROUP by Country
HAVING count(CustomerId) >= 5 <<<<<<<<<<<<<<<<< อยู่หลัง Group by เท่านั้น ใช้นามแฝงก็ได้
ORDER by Amount;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////// หาความยาว อัลบั้ม /////////////////////////////////////////
SELECT AlbumId, 
	sum(Milliseconds)/60000 as Minutes
FROM tracks
GROUP By AlbumId;
///////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////  การ INNER JOIN #### ONLY INTERSECTION ////////////////////////////////////
SELECT invoices.InvoiceId,  ### ตาราง.อยากหาโดยยึด field อะไร 
	customers.CustomerId, customers.FirstName, customers.LastName   ### ตาราง.อยากได้อะไร 
FROM invoices                         ### เอาอะไรไป JOINT กับอะไร
	INNER JOIN customers          ###
	ON invoices.CustomerId = customers.CustomerId;   ### การนับ id ของตาราง invoices ไปเท่ากับ id ของตาราง customers ที่อยากรู้
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
SELECT invoices.InvoiceId, 
	customers.CustomerId, 
	customers.FirstName,
	customers.LastName			################ LEFT JOIN
FROM invoices 
LEFT JOIN customers
ON invoices.CustomerId = customers.CustomerId
ORDER BY InvoiceId;
//////////////////////////////////////////////////////////////////////////////////////////////////////

/////// การ JOINT ใน TABLE เดียวกัน ### ต้องตั้งชื่อใหม่ให้อีกอัน ////////////
SELECT employees.EmployeeId, 
	employees.LastName,
	employees.FirstName,
	employees.ReportsTo,
	employees2.LastName,
	employees2.FirstName
FROM employees
INNER JOIN employees AS employees2
ON employees.ReportsTo = employees2.EmployeeId; ##### อยากรู้ว่า report ต่อใคร
/////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////// ตัวอย่าง หายอดขายสูงสุดของพนักงานแต่ละคน ///////////////////////////////////////////
SELECT
  *
FROM 
(
  SELECT
    agent_code,
    ord_amount,
    RANK() OVER(PARTITION BY agent_code ORDER BY ord_amount DESC) AS TOP  ########## ถ้าใช้เป็น ROW_NUMBER() จะได้เป็นแถวแทน 
  FROM
    `krittapasa-project.raw_data.orders`
  ORDER BY
    agent_code ASC
)
WHERE TOP <= 2;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////// การสร้าง Temp Table ข้อดีคือประมวลผลน้อยลง อยู่ได้ประมาณ 1 วัน สามารถเอามาใช้ได้เลย ///////////////////////////////
CREATE TEMP TABLE ...ตั้งชื่อ (field_name ประเภทข้อมูล,field_name2 STRING) AS
SELECT 
   field_name
FROM
   table_name
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

